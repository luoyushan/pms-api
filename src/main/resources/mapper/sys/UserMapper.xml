<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pms.api.sys.user.UserMapper" >
  <resultMap id="userMap" type="com.pms.api.sys.user.User">
    <id property="id" column="id" />
    <id property="name" column="name" />
    <id property="title" column="title" />
    <id property="remarks" column="remarks" />
    <id property="createDate" column="createDate" />
    <id property="updateDate" column="updateDate" />
    <id property="username" column="username" />
    <id property="password" column="password" />
    <id property="no" column="no" />
    <id property="sex" column="sex" />
    <id property="email" column="email" />
    <id property="phone" column="phone" />
    <id property="mobile" column="mobile" />
    <id property="loginIp" column="loginIp" />
    <id property="loginDate" column="loginDate" />
    <id property="loginFlag" column="loginFlag" />
    <id property="photo" column="photo" />
    <association property="createBy" javaType="com.pms.api.sys.user.User">
      <id property="id" column="createBy.username" />
      <result property="name" column="createBy.name" />
    </association>
    <association property="updateBy" javaType="com.pms.api.sys.user.User">
      <id property="id" column="updateBy.username" />
      <result property="name" column="updateBy.name" />
    </association>
    <association property="dept" javaType="com.pms.api.sys.office.Office">
      <id property="id" column="dept.id" />
      <result property="name" column="dept.name" />
    </association>
    <collection property="roles" ofType="java.lang.String">
      <result column="role.ename" />
    </collection>
    <collection property="roleList" ofType="com.pms.api.sys.role.Role">
      <id property="id" column="role.id"/>
      <result property="name" column="role.name"/>
      <result property="ename" column="role.ename"/>
      <result property="dataScope" column="role.dataScope"/>
    </collection>
  </resultMap>
  <sql id="columns" >
    a.id,
    a.name,
    a.title,
    a.remarks,
    a.create_by as "createBy.username",
    a.create_date as "createDate" ,
    a.update_by as "updateBy.username",
    a.update_date as "updateDate",
    a.dept_id as "dept.id",
    a.username,
    a.password,
    a.no,
    a.sex,
    a.email,
    a.phone,
    a.mobile,
    a.login_ip as "loginIp",
    a.login_date as "loginDate",
    a.login_flag as "loginFlag",
    a.photo
  </sql>

  <sql id="columnsPlus">
    su.name as "createBy.name",
    su2.name as "updateBy.name",
    sr.id as "role.id",
    sr.name as "role.name",
    sr.ename as "role.ename",
    sr.data_scope as "role.dataScope",
    so.name as "dept.name"
  </sql>

  <sql id="joins">
    LEFT JOIN sys_user su ON su.id = a.create_by
    LEFT JOIN sys_user su2 ON su2.id = a.update_by
    LEFT JOIN sys_office so ON so.id = a.dept_id
    LEFT JOIN sys_user_role sur ON a.id = sur.user_id
    LEFT JOIN sys_role sr ON sr.id = sur.role_id
  </sql>

  <select id="get" resultMap="userMap">
    SELECT
      <include refid="columns"/>,
      <include refid="columnsPlus"/>
    FROM sys_user a
      <include refid="joins" />
    WHERE a.id = #{id}
  </select>

  <select id="findList" resultType="com.pms.api.sys.user.User" >
    SELECT
    <include refid="columns" />
    FROM sys_user a
    <where>
      <if test="delFlag != null and delFlag != ''">
        AND a.del_flag = #{delFlag}
      </if>
      <if test="delFlag == null or delFlag == ''">
        AND a.del_flag = #{DEL_FLAG_NORMAL}
      </if>
      <if test="name != null and name != ''">
        AND a.name LIKE '%'||#{name}||'%'
      </if>
    </where>
  </select>

  <insert id="insert">
    INSERT INTO sys_user(
      id,
      name,
      title,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      dept_id,
      username,
      password,
      no,
      sex,
      email,
      phone,
      mobile,
      login_ip,
      login_date,
      login_flag,
      del_flag,
      photo
      ) VALUES (
      #{id},
      #{name},
      #{title},
      #{remarks},
      #{createBy.username},
      #{createDate},
      #{updateBy.username},
      #{updateDate},
      #{delFlag},
      #{dept.id},
      #{username},
      #{password},
      #{no},
      #{sex},
      #{email},
      #{phone},
      #{mobile},
      #{loginIp},
      #{loginDate},
      #{loginFlag},
      #{delFlag},
      #{photo}
    )
  </insert>

  <update id="update">
    UPDATE sys_user SET
      name = #{name},
      title = #{title},
      remark = #{remark},
      update_by = #{updateBy.username},
      update_date = #{updateDate},
      dept_id = #{dept.id},
      username = #{username},
      password = #{password},
      no = #{no},
      sex = #{sex},
      email = #{email},
      phone = #{phone},
      mobile = #{mobile},
      login_ip = #{loginIp},
      login_date = #{loginDate},
      login_flag = #{loginFlag},
      photo = #{photo}
    WHERE id = #{id}
  </update>

  <update id="resetPassword">
    UPDATE sys_user SET
      password = #{password}
    WHERE id = #{id}
  </update>
  <update id="delete">
    UPDATE sys_user SET
      del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
  </update>

  <select id="getUserByUsername" resultMap="userMap">
    SELECT
      <include refid="columns"/>,
      <include refid="columnsPlus"/>
    FROM sys_user a
      <include refid="joins"/>
    WHERE a.username = #{username}

  </select>

  <!--<select id="getUserByUsername" resultType="com.pms.api.sys.user.User">-->
    <!--SELECT-->
      <!--<include refid="columns"/>,-->
      <!--string_agg(sr.ename,',')-->
    <!--FROM sys_user a-->
    <!--LEFT JOIN sys_user_role sur ON a.id = sur.user_id-->
    <!--LEFT JOIN sys_role sr on sr.id = sur.role_id-->
    <!--WHERE a.username = #{username}-->
    <!--GROUP BY a.id-->
  <!--</select>-->
</mapper>
